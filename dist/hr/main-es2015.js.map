{"version":3,"sources":["./src/app/app.component.html","./src/app/homepage/homepage.component.html","./src/app/interviewer/interviewer.component.html","./src/app/jobs/jobs.component.html","./src/app/login/login.component.html","./src/app/newjob/newjob.component.html","./src/app/user/user.component.html","./node_modules/tslib/tslib.es6.js","./src/$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/homepage/homepage.component.css","./src/app/homepage/homepage.component.ts","./src/app/interviewer/interviewer.component.css","./src/app/interviewer/interviewer.component.ts","./src/app/jobs/jobs.component.css","./src/app/jobs/jobs.component.ts","./src/app/login/login.component.css","./src/app/login/login.component.ts","./src/app/newjob/newjob.component.css","./src/app/newjob/newjob.component.ts","./src/app/user/user.component.css","./src/app/user/user.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["export default \"\\r\\n<router-outlet></router-outlet>\"","export default \"<mat-toolbar color=\\\"primary\\\">\\r\\n  <mat-toolbar-row>\\r\\n  <span>Home Page</span>\\r\\n      <span class=\\\"example-fill-remaining-space\\\"></span>\\r\\n      <span class=\\\"align-center\\\"></span>\\r\\n      <span style=\\\"margin-left: 80%;\\\"></span>\\r\\n      <button mat-button>About</button>\\r\\n      <button mat-button>Contacts</button>\\r\\n   </mat-toolbar-row>\\r\\n  </mat-toolbar>\\r\\n<div style=\\\"margin-top: 20px;\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-2\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <mat-card class=\\\"example-card\\\">\\r\\n      <mat-card-header>\\r\\n        <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\r\\n        <mat-card-title>User Profile</mat-card-title>\\r\\n        <!-- <mat-card-subtitle>Dog Breed</mat-card-subtitle> -->\\r\\n      </mat-card-header>\\r\\n      \\r\\n      <!-- <img mat-card-image src=\\\"https://material.angular.io/assets/img/examples/shiba2.jpg\\\" alt=\\\"Photo of a Shiba Inu\\\"> -->\\r\\n      <mat-card-content>\\r\\n        <p>\\r\\n          \\r\\n        </p>\\r\\n      </mat-card-content>\\r\\n      <mat-card-actions style=\\\"text-align: center;\\\">\\r\\n        <button mat-raised-button color=\\\"primary\\\">View</button>\\r\\n        <button mat-raised-button color=\\\"primary\\\">Edit</button>\\r\\n      </mat-card-actions>\\r\\n    </mat-card>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4\\\">\\r\\n      <mat-card class=\\\"example-card\\\">\\r\\n        <mat-card-header>\\r\\n          <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\r\\n          <mat-card-title>User Profile</mat-card-title>\\r\\n          <!-- <mat-card-subtitle>Dog Breed</mat-card-subtitle> -->\\r\\n        </mat-card-header>\\r\\n        \\r\\n        <!-- <img mat-card-image src=\\\"https://material.angular.io/assets/img/examples/shiba2.jpg\\\" alt=\\\"Photo of a Shiba Inu\\\"> -->\\r\\n        <mat-card-content>\\r\\n          <p>\\r\\n            \\r\\n          </p>\\r\\n        </mat-card-content>\\r\\n        <mat-card-actions style=\\\"text-align: center;\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\">View</button>\\r\\n          <button mat-raised-button color=\\\"primary\\\">Edit</button>\\r\\n        </mat-card-actions>\\r\\n      </mat-card>\\r\\n      </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-2\\\"></div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <mat-card class=\\\"example-card\\\">\\r\\n      <mat-card-header>\\r\\n        <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\r\\n        <mat-card-title>User Profile</mat-card-title>\\r\\n        <!-- <mat-card-subtitle>Dog Breed</mat-card-subtitle> -->\\r\\n      </mat-card-header>\\r\\n      \\r\\n      <!-- <img mat-card-image src=\\\"https://material.angular.io/assets/img/examples/shiba2.jpg\\\" alt=\\\"Photo of a Shiba Inu\\\"> -->\\r\\n      <mat-card-content>\\r\\n        <p>\\r\\n          \\r\\n        </p>\\r\\n      </mat-card-content>\\r\\n      <mat-card-actions style=\\\"text-align: center;\\\">\\r\\n        <button mat-raised-button color=\\\"primary\\\">View</button>\\r\\n        <button mat-raised-button color=\\\"primary\\\">Edit</button>\\r\\n      </mat-card-actions>\\r\\n    </mat-card>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-4\\\">\\r\\n      <mat-card class=\\\"example-card\\\">\\r\\n        <mat-card-header>\\r\\n          <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\r\\n          <mat-card-title>User Profile</mat-card-title>\\r\\n          <!-- <mat-card-subtitle>Dog Breed</mat-card-subtitle> -->\\r\\n        </mat-card-header>\\r\\n        \\r\\n        <!-- <img mat-card-image src=\\\"https://material.angular.io/assets/img/examples/shiba2.jpg\\\" alt=\\\"Photo of a Shiba Inu\\\"> -->\\r\\n        <mat-card-content>\\r\\n          <p>\\r\\n            \\r\\n          </p>\\r\\n        </mat-card-content>\\r\\n        <mat-card-actions style=\\\"text-align: center;\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\">View</button>\\r\\n          <button mat-raised-button color=\\\"primary\\\">Edit</button>\\r\\n        </mat-card-actions>\\r\\n      </mat-card>\\r\\n      </div>\\r\\n</div>\\r\\n      \\r\\n</div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  \\r\\n  \\r\\n  \\r\\n  \\r\\n  <!-- Copyright 2019 Google LLC. All Rights Reserved.\\r\\n      Use of this source code is governed by an MIT-style license that\\r\\n      can be found in the LICENSE file at http://angular.io/license -->\\r\\n  \\r\\n  \\r\\n  <!-- Copyright 2019 Google LLC. All Rights Reserved.\\r\\n      Use of this source code is governed by an MIT-style license that\\r\\n      can be found in the LICENSE file at http://angular.io/license -->\"","export default \"<mat-toolbar color=\\\"primary\\\">\\r\\n  <mat-toolbar-row>\\r\\n  <span>Interviewer</span>\\r\\n      <span class=\\\"example-fill-remaining-space\\\"></span>\\r\\n      <span class=\\\"align-center\\\"></span>\\r\\n      <span style=\\\"margin-left: 80%;\\\"></span>\\r\\n      <button mat-button>About</button>\\r\\n      <button mat-button>Contacts</button>\\r\\n   </mat-toolbar-row>\\r\\n  </mat-toolbar>\\r\\n\\r\\n<mat-accordion>\\r\\n  <mat-expansion-panel>\\r\\n    <mat-expansion-panel-header>\\r\\n      <mat-panel-title>\\r\\n        Name Of The Candidate:\\r\\n      </mat-panel-title>\\r\\n      <mat-panel-description>\\r\\n        CTC:\\r\\n      </mat-panel-description>\\r\\n      <mat-panel-description>\\r\\n        Experience:\\r\\n      </mat-panel-description>\\r\\n    </mat-expansion-panel-header>\\r\\n    Round 1:\\r\\n    <mat-form-field>\\r\\n      <mat-select>\\r\\n        <mat-option *ngFor=\\\"let interviewer of interviewers\\\" [value]=\\\"interviewer.value\\\">\\r\\n          {{interviewer.viewValue}}\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n    <mat-form-field>\\r\\n      <textarea matInput\\r\\n      placeholder=\\\"comments\\\"\\r\\n          cdkTextareaAutosize\\r\\n          #autosize=\\\"cdkTextareaAutosize\\\"\\r\\n          cdkAutosizeMinRows=\\\"1\\\"\\r\\n          cdkAutosizeMaxRows=\\\"5\\\"></textarea>\\r\\n    </mat-form-field>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n    <button mat-flat-button color=\\\"accent\\\" style=\\\"background-color: green;\\\">Next Round</button>\\r\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n    <button mat-raised-button style=\\\"background-color: indigo;color: white;\\\">Select</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n    <button mat-raised-button style=\\\"background-color: red;color: white;\\\">Reject</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>\\r\\n    Round 2:\\r\\n    <mat-form-field>\\r\\n      <mat-select>\\r\\n        <mat-option *ngFor=\\\"let interviewer of interviewers\\\" [value]=\\\"interviewer.value\\\">\\r\\n          {{interviewer.viewValue}}\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n    <mat-form-field>\\r\\n      <textarea matInput\\r\\n        placeholder=\\\"comments\\\"\\r\\n            cdkTextareaAutosize\\r\\n            #autosize=\\\"cdkTextareaAutosize\\\"\\r\\n            cdkAutosizeMinRows=\\\"1\\\"\\r\\n            cdkAutosizeMaxRows=\\\"5\\\"></textarea>\\r\\n    </mat-form-field>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n    <button mat-flat-button color=\\\"accent\\\" style=\\\"background-color: green;\\\">Next Round</button>\\r\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n    <button mat-raised-button style=\\\"background-color: indigo;color: white;\\\">Select</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n    <button mat-raised-button style=\\\"background-color: red;color: white;\\\">Reject</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>\\r\\n    Round 3:\\r\\n    <mat-form-field>\\r\\n      <mat-select>\\r\\n        <mat-option *ngFor=\\\"let interviewer of interviewers\\\" [value]=\\\"interviewer.value\\\">\\r\\n          {{interviewer.viewValue}}\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n    <mat-form-field>\\r\\n      <textarea matInput\\r\\n      placeholder=\\\"comments\\\"\\r\\n          cdkTextareaAutosize\\r\\n          #autosize=\\\"cdkTextareaAutosize\\\"\\r\\n          cdkAutosizeMinRows=\\\"1\\\"\\r\\n          cdkAutosizeMaxRows=\\\"5\\\"></textarea>\\r\\n    </mat-form-field>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n    <button mat-flat-button color=\\\"accent\\\" style=\\\"background-color: green;\\\">Next Round</button>\\r\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n    <button mat-raised-button style=\\\"background-color: indigo;color: white;\\\">Select</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n    <button mat-raised-button style=\\\"background-color: red;color: white;\\\">Reject</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n  </mat-expansion-panel>\\r\\n  <mat-expansion-panel>\\r\\n    <mat-expansion-panel-header>\\r\\n      <mat-panel-title>\\r\\n        Name Of The Candidate:\\r\\n      </mat-panel-title>\\r\\n      <mat-panel-description>\\r\\n        CTC:\\r\\n      </mat-panel-description>\\r\\n      <mat-panel-description>\\r\\n        Experience:\\r\\n      </mat-panel-description>\\r\\n    </mat-expansion-panel-header>\\r\\n    Round 1:\\r\\n    <mat-form-field>\\r\\n      <mat-select>\\r\\n        <mat-option *ngFor=\\\"let interviewer of interviewers\\\" [value]=\\\"interviewer.value\\\">\\r\\n          {{interviewer.viewValue}}\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n    <mat-form-field>\\r\\n      <textarea matInput\\r\\n      placeholder=\\\"comments\\\"\\r\\n          cdkTextareaAutosize\\r\\n          #autosize=\\\"cdkTextareaAutosize\\\"\\r\\n          cdkAutosizeMinRows=\\\"1\\\"\\r\\n          cdkAutosizeMaxRows=\\\"5\\\"></textarea>\\r\\n    </mat-form-field>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n    <button mat-flat-button color=\\\"accent\\\" style=\\\"background-color: green;\\\">Next Round</button>\\r\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n    <button mat-raised-button style=\\\"background-color: indigo;color: white;\\\">Select</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n    <button mat-raised-button style=\\\"background-color: red;color: white;\\\">Reject</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>\\r\\n    Round 2:\\r\\n    <mat-form-field>\\r\\n      <mat-select>\\r\\n        <mat-option *ngFor=\\\"let interviewer of interviewers\\\" [value]=\\\"interviewer.value\\\">\\r\\n          {{interviewer.viewValue}}\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n    <mat-form-field>\\r\\n      <textarea matInput\\r\\n        placeholder=\\\"comments\\\"\\r\\n            cdkTextareaAutosize\\r\\n            #autosize=\\\"cdkTextareaAutosize\\\"\\r\\n            cdkAutosizeMinRows=\\\"1\\\"\\r\\n            cdkAutosizeMaxRows=\\\"5\\\"></textarea>\\r\\n    </mat-form-field>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n    <button mat-flat-button color=\\\"accent\\\" style=\\\"background-color: green;\\\">Next Round</button>\\r\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n    <button mat-raised-button style=\\\"background-color: indigo;color: white;\\\">Select</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n    <button mat-raised-button style=\\\"background-color: red;color: white;\\\">Reject</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>\\r\\n    Round 3:\\r\\n    <mat-form-field>\\r\\n      <mat-select>\\r\\n        <mat-option *ngFor=\\\"let interviewer of interviewers\\\" [value]=\\\"interviewer.value\\\">\\r\\n          {{interviewer.viewValue}}\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n    <mat-form-field>\\r\\n      <textarea matInput\\r\\n      placeholder=\\\"comments\\\"\\r\\n          cdkTextareaAutosize\\r\\n          #autosize=\\\"cdkTextareaAutosize\\\"\\r\\n          cdkAutosizeMinRows=\\\"1\\\"\\r\\n          cdkAutosizeMaxRows=\\\"5\\\"></textarea>\\r\\n    </mat-form-field>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n    <button mat-flat-button color=\\\"accent\\\" style=\\\"background-color: green;\\\">Next Round</button>\\r\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n    <button mat-raised-button style=\\\"background-color: indigo;color: white;\\\">Select</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n    <button mat-raised-button style=\\\"background-color: red;color: white;\\\">Reject</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n  </mat-expansion-panel>\\r\\n  <mat-expansion-panel>\\r\\n    <mat-expansion-panel-header>\\r\\n      <mat-panel-title>\\r\\n        Name Of The Candidate:\\r\\n      </mat-panel-title>\\r\\n      <mat-panel-description>\\r\\n        CTC:\\r\\n      </mat-panel-description>\\r\\n      <mat-panel-description>\\r\\n        Experience:\\r\\n      </mat-panel-description>\\r\\n    </mat-expansion-panel-header>\\r\\n    Round 1:\\r\\n    <mat-form-field>\\r\\n      <mat-select>\\r\\n        <mat-option *ngFor=\\\"let interviewer of interviewers\\\" [value]=\\\"interviewer.value\\\">\\r\\n          {{interviewer.viewValue}}\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n    <mat-form-field>\\r\\n      <textarea matInput\\r\\n      placeholder=\\\"comments\\\"\\r\\n          cdkTextareaAutosize\\r\\n          #autosize=\\\"cdkTextareaAutosize\\\"\\r\\n          cdkAutosizeMinRows=\\\"1\\\"\\r\\n          cdkAutosizeMaxRows=\\\"5\\\"></textarea>\\r\\n    </mat-form-field>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n    <button mat-flat-button color=\\\"accent\\\" style=\\\"background-color: green;\\\">Next Round</button>\\r\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n    <button mat-raised-button style=\\\"background-color: indigo;color: white;\\\">Select</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n    <button mat-raised-button style=\\\"background-color: red;color: white;\\\">Reject</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>\\r\\n    Round 2:\\r\\n    <mat-form-field>\\r\\n      <mat-select>\\r\\n        <mat-option *ngFor=\\\"let interviewer of interviewers\\\" [value]=\\\"interviewer.value\\\">\\r\\n          {{interviewer.viewValue}}\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n    <mat-form-field>\\r\\n      <textarea matInput\\r\\n        placeholder=\\\"comments\\\"\\r\\n            cdkTextareaAutosize\\r\\n            #autosize=\\\"cdkTextareaAutosize\\\"\\r\\n            cdkAutosizeMinRows=\\\"1\\\"\\r\\n            cdkAutosizeMaxRows=\\\"5\\\"></textarea>\\r\\n    </mat-form-field>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n    <button mat-flat-button color=\\\"accent\\\" style=\\\"background-color: green;\\\">Next Round</button>\\r\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n    <button mat-raised-button style=\\\"background-color: indigo;color: white;\\\">Select</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n    <button mat-raised-button style=\\\"background-color: red;color: white;\\\">Reject</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>\\r\\n    Round 3:\\r\\n    <mat-form-field>\\r\\n      <mat-select>\\r\\n        <mat-option *ngFor=\\\"let interviewer of interviewers\\\" [value]=\\\"interviewer.value\\\">\\r\\n          {{interviewer.viewValue}}\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n    <mat-form-field>\\r\\n      <textarea matInput\\r\\n      placeholder=\\\"comments\\\"\\r\\n          cdkTextareaAutosize\\r\\n          #autosize=\\\"cdkTextareaAutosize\\\"\\r\\n          cdkAutosizeMinRows=\\\"1\\\"\\r\\n          cdkAutosizeMaxRows=\\\"5\\\"></textarea>\\r\\n    </mat-form-field>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n    <button mat-flat-button color=\\\"accent\\\" style=\\\"background-color: green;\\\">Next Round</button>\\r\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n    <button mat-raised-button style=\\\"background-color: indigo;color: white;\\\">Select</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n    <button mat-raised-button style=\\\"background-color: red;color: white;\\\">Reject</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n  </mat-expansion-panel>\\r\\n</mat-accordion>\\r\\n\\r\\n\\r\\n\"","export default \"<mat-toolbar color=\\\"primary\\\">\\r\\n  <mat-toolbar-row>\\r\\n  <span>Jobs</span>\\r\\n      <span class=\\\"example-fill-remaining-space\\\"></span>\\r\\n      <span class=\\\"align-center\\\"></span>\\r\\n      <span style=\\\"margin-left: 80%;\\\"></span>\\r\\n      <button mat-button>About</button>\\r\\n      <button mat-button>Contact</button>\\r\\n   </mat-toolbar-row>\\r\\n</mat-toolbar>\\r\\n\\r\\n<mat-accordion>\\r\\n  <mat-expansion-panel>\\r\\n    <mat-expansion-panel-header>\\r\\n      <mat-panel-title>\\r\\n        Job Title:\\r\\n      </mat-panel-title>\\r\\n      <mat-panel-description>\\r\\n        FULL STACK Developer\\r\\n      </mat-panel-description>\\r\\n    </mat-expansion-panel-header>\\r\\n    <mat-form-field>\\r\\n      <input matInput placeholder=\\\"Role\\\">\\r\\n    </mat-form-field>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n    <mat-form-field>\\r\\n      <input matInput placeholder=\\\"Experience\\\">\\r\\n    </mat-form-field>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n    <mat-form-field>\\r\\n      <input matInput placeholder=\\\"CTC\\\">\\r\\n    </mat-form-field>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>\\r\\n    <mat-form-field>\\r\\n      <input matInput placeholder=\\\"Positions\\\">\\r\\n    </mat-form-field>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n    <mat-form-field>\\r\\n      <input matInput placeholder=\\\"Roles & Responsibilites\\\">\\r\\n    </mat-form-field>\\r\\n  </mat-expansion-panel>\\r\\n  <mat-expansion-panel>\\r\\n    <mat-expansion-panel-header>\\r\\n      <mat-panel-title>\\r\\n        Job Title:\\r\\n      </mat-panel-title>\\r\\n      <mat-panel-description>\\r\\n        .NET Developer\\r\\n      </mat-panel-description>\\r\\n    </mat-expansion-panel-header>\\r\\n    <mat-form-field>\\r\\n      <input matInput placeholder=\\\"Role\\\">\\r\\n    </mat-form-field>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n    <mat-form-field>\\r\\n      <input matInput placeholder=\\\"Experience\\\">\\r\\n    </mat-form-field>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n    <mat-form-field>\\r\\n      <input matInput placeholder=\\\"CTC\\\">\\r\\n    </mat-form-field>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>\\r\\n    <mat-form-field>\\r\\n      <input matInput placeholder=\\\"Positions\\\">\\r\\n    </mat-form-field>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n    <mat-form-field>\\r\\n      <input matInput placeholder=\\\"Roles & Responsibilites\\\">\\r\\n    </mat-form-field>\\r\\n  </mat-expansion-panel>\\r\\n  <mat-expansion-panel>\\r\\n    <mat-expansion-panel-header>\\r\\n      <mat-panel-title>\\r\\n        Job Title:\\r\\n      </mat-panel-title>\\r\\n      <mat-panel-description>\\r\\n        Andriod Developer\\r\\n      </mat-panel-description>\\r\\n    </mat-expansion-panel-header>\\r\\n    <mat-form-field>\\r\\n      <input matInput placeholder=\\\"Role\\\">\\r\\n    </mat-form-field>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n    <mat-form-field>\\r\\n      <input matInput placeholder=\\\"Experience\\\">\\r\\n    </mat-form-field>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n    <mat-form-field>\\r\\n      <input matInput placeholder=\\\"CTC\\\">\\r\\n    </mat-form-field>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>\\r\\n    <mat-form-field>\\r\\n      <input matInput placeholder=\\\"Positions\\\">\\r\\n    </mat-form-field>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n    <mat-form-field>\\r\\n      <input matInput placeholder=\\\"Roles & Responsibilites\\\">\\r\\n    </mat-form-field>\\r\\n  </mat-expansion-panel>\\r\\n</mat-accordion>\\r\\n\\r\\n\\r\\n\"","export default \"\\r\\n<mat-toolbar color=\\\"primary\\\">\\r\\n  <mat-toolbar-row>\\r\\n  <span>Vlinked</span>\\r\\n      <span class=\\\"example-fill-remaining-space\\\"></span>\\r\\n      <span class=\\\"align-center\\\"></span>\\r\\n      <span style=\\\"margin-left: 80%;\\\"></span>\\r\\n      <button mat-button>About</button>\\r\\n      <button mat-button>Contact</button>\\r\\n      \\r\\n \\r\\n   </mat-toolbar-row>\\r\\n</mat-toolbar>\\r\\n<mat-card id=\\\"logincard\\\"  class=\\\"example-card\\\">\\r\\n\\r\\n  \\r\\n  <mat-card-content>\\r\\n    <form class=\\\"example-form\\\">\\r\\n      <table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\">\\r\\n        <tr>\\r\\n          <td>\\r\\n            <mat-form-field  class=\\\"example-full-width\\\">\\r\\n            <input  matInput placeholder=\\\"Username\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" required>\\r\\n            </mat-form-field>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n        <td><mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput placeholder=\\\"Password\\\" [(ngModel)]=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\" required>\\r\\n        </mat-form-field></td>\\r\\n      </tr></table>\\r\\n    </form>\\r\\n    <mat-spinner [style.display]=\\\"showSpinner ? 'block' : 'none'\\\"></mat-spinner>\\r\\n  </mat-card-content>\\r\\n  <mat-card-actions>\\r\\n    <button mat-raised-button (click)=\\\"login()\\\" color=\\\"primary\\\">Login</button>\\r\\n  </mat-card-actions>\\r\\n\\r\\n</mat-card>\"","export default \"<mat-toolbar color=\\\"primary\\\">\\r\\n  <mat-toolbar-row>\\r\\n    <span>Vlinked</span>\\r\\n    <span class=\\\"example-spacer\\\"></span>\\r\\n    <mat-icon class=\\\"example-icon\\\" aria-hidden=\\\"false\\\">notification_important</mat-icon>\\r\\n  </mat-toolbar-row>\\r\\n</mat-toolbar>\\r\\n<br/>\\r\\n<div class=\\\"col-md-2\\\"></div>\\r\\n<div class=\\\"col-md-10\\\">\\r\\n  <mat-card class=\\\"example-card\\\">\\r\\n    <mat-card-header>\\r\\n      <mat-card-title>New Job</mat-card-title>\\r\\n    </mat-card-header>\\r\\n    <mat-card-content>\\r\\n      <form [formGroup]=\\\"newJobForm\\\">\\r\\n        <mat-form-field>\\r\\n          <mat-label>Role</mat-label>\\r\\n          <mat-select [formControl]=\\\"role\\\" required>\\r\\n            <mat-option>--</mat-option>\\r\\n            <mat-option *ngFor=\\\"let role of roles\\\" [value]=\\\"role\\\">\\r\\n              {{role.name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n          <mat-error *ngIf=\\\"animalControl.hasError('required')\\\">Please choose role</mat-error>\\r\\n        </mat-form-field>\\r\\n      </form>\\r\\n    </mat-card-content>\\r\\n  </mat-card>\\r\\n</div>\"","export default \"<p>\\r\\n  user works!\\r\\n</p>\\r\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport {UserComponent} from './user/user.component';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {JobsComponent} from './jobs/jobs.component';\r\nimport { InterviewerComponent } from './interviewer/interviewer.component';\r\nimport { HomepageComponent } from './homepage/homepage.component';\r\n\r\nimport {NewjobComponent} from './newjob/newjob.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'user', component: UserComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  {path : '', component : LoginComponent},\r\n  {path : 'jobs', component : JobsComponent},\r\n  {path : 'interviewer', component : InterviewerComponent},\r\n  {path : 'homepage', component : HomepageComponent},\r\n  {path: 'newjob', component: NewjobComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'hr';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport {UserComponent} from './user/user.component';\r\n\r\nimport { MatCardModule } from '@angular/material';\r\nimport { FormsModule, ReactiveFormsModule  } from '@angular/forms';\r\nimport { MatFormFieldModule,MatToolbarModule,\r\n  MatButtonModule,\r\n  MatDialogModule,\r\n  MatTableModule,\r\n  MatMenuModule,\r\n  MatIconModule,\r\n  MatExpansionModule,\r\n  MatSelectModule \r\n   } from '@angular/material';\r\nimport { MatProgressSpinnerModule } from '@angular/material';\r\nimport { MatInputModule} from '@angular/material';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { JobsComponent } from './jobs/jobs.component';\r\nimport { InterviewerComponent } from './interviewer/interviewer.component';\r\nimport { HomepageComponent } from './homepage/homepage.component';\r\nimport { NewjobComponent } from './newjob/newjob.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n   LoginComponent,\r\n   UserComponent,\r\n   JobsComponent,\r\n   InterviewerComponent,\r\n   HomepageComponent,\r\n   NewjobComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    MatCardModule,\r\n    FormsModule,\r\n    MatFormFieldModule,\r\n    MatProgressSpinnerModule,\r\n    MatInputModule,\r\n    BrowserAnimationsModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatDialogModule,\r\n    MatTableModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatExpansionModule,\r\n    MatSelectModule \r\n  ],\r\n  exports:[\r\n    CommonModule,\r\n    MatFormFieldModule,\r\n    MatCardModule,\r\n    MatProgressSpinnerModule,\r\n    MatInputModule,\r\n    BrowserAnimationsModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatDialogModule,\r\n    MatTableModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatExpansionModule,\r\n    MatSelectModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export default \".example-card{\\r\\n    /* width: 20%; */\\r\\n    height: 30%;\\r\\n    margin-top: 10%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZXBhZ2UvaG9tZXBhZ2UuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtJQUNoQixXQUFXO0lBQ1gsZUFBZTtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL2hvbWVwYWdlL2hvbWVwYWdlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1jYXJke1xyXG4gICAgLyogd2lkdGg6IDIwJTsgKi9cclxuICAgIGhlaWdodDogMzAlO1xyXG4gICAgbWFyZ2luLXRvcDogMTAlO1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-homepage',\r\n  templateUrl: './homepage.component.html',\r\n  styleUrls: ['./homepage.component.css']\r\n})\r\nexport class HomepageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ludGVydmlld2VyL2ludGVydmlld2VyLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nexport interface interviewer {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-interviewer',\r\n  templateUrl: './interviewer.component.html',\r\n  styleUrls: ['./interviewer.component.css']\r\n})  \r\nexport class InterviewerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  interviewers: interviewer[] = [\r\n    {value: 'mohan reddy', viewValue: 'Mohan Reddy'},\r\n    {value: 'reddy mohan', viewValue: 'Reddy Mohan'},\r\n    {value: 'mohan', viewValue: 'Mohan'}\r\n  ];\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2pvYnMvam9icy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-jobs',\r\n  templateUrl: './jobs.component.html',\r\n  styleUrls: ['./jobs.component.css']\r\n})\r\nexport class JobsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"#logincard{\\r\\n    margin-top: 10%;\\r\\n    width: 30%;\\r\\n    margin-left: 32%;\\r\\n    \\r\\n}\\r\\n.inside{\\r\\n    margin-left: 30%;\\r\\n}\\r\\n.example-full-width{\\r\\n    width: 100%;\\r\\n}\\r\\n.example-card{\\r\\n    text-align: center;\\r\\n}\\r\\n#id{\\r\\n    margin-left: 20%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGVBQWU7SUFDZixVQUFVO0lBQ1YsZ0JBQWdCOztBQUVwQjtBQUNBO0lBQ0ksZ0JBQWdCO0FBQ3BCO0FBQ0E7SUFDSSxXQUFXO0FBQ2Y7QUFDQTtJQUNJLGtCQUFrQjtBQUN0QjtBQUNBO0lBQ0ksZ0JBQWdCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiNsb2dpbmNhcmR7XHJcbiAgICBtYXJnaW4tdG9wOiAxMCU7XHJcbiAgICB3aWR0aDogMzAlO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDMyJTtcclxuICAgIFxyXG59XHJcbi5pbnNpZGV7XHJcbiAgICBtYXJnaW4tbGVmdDogMzAlO1xyXG59XHJcbi5leGFtcGxlLWZ1bGwtd2lkdGh7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG4uZXhhbXBsZS1jYXJke1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcbiNpZHtcclxuICAgIG1hcmdpbi1sZWZ0OiAyMCU7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport {Router} from '@angular/router'\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  constructor(private router: Router) { }\r\nusername: string;\r\npassword: string;\r\n  ngOnInit() {\r\n  }\r\n  login() : void {\r\n    if(this.username == 'admin' && this.password == 'admin'){\r\n     this.router.navigate([\"jobs\"]);\r\n    }else if(this.username == 'interviewer' && this.password == 'interviewer'){\r\n        this.router.navigate([\"interviewer\"]);\r\n    }\r\n    \r\n  }\r\n  }\r\n\r\n\r\n","export default \".example-icon {\\r\\n    padding: 0 14px;\\r\\n}\\r\\n  \\r\\n.example-spacer {\\r\\n    flex: 1 1 auto;\\r\\n}\\r\\n  \\r\\n.example-card {\\r\\n    max-width: 70%;\\r\\n    display: flex;\\r\\n}\\r\\n  \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmV3am9iL25ld2pvYi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZUFBZTtBQUNuQjs7QUFFQTtJQUNJLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsYUFBYTtBQUNqQiIsImZpbGUiOiJzcmMvYXBwL25ld2pvYi9uZXdqb2IuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLWljb24ge1xyXG4gICAgcGFkZGluZzogMCAxNHB4O1xyXG59XHJcbiAgXHJcbi5leGFtcGxlLXNwYWNlciB7XHJcbiAgICBmbGV4OiAxIDEgYXV0bztcclxufVxyXG5cclxuLmV4YW1wbGUtY2FyZCB7XHJcbiAgICBtYXgtd2lkdGg6IDcwJTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbn1cclxuICAiXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport {FormControl, Validators, FormBuilder} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-newjob',\r\n  templateUrl: './newjob.component.html',\r\n  styleUrls: ['./newjob.component.css']\r\n})\r\nexport class NewjobComponent implements OnInit {\r\n  role: string;\r\n  newJobForm;\r\n  roles: [\r\n    {name: 'Dog'},\r\n    {name: 'Cat'},\r\n    {name: 'Cow'},\r\n    {name: 'Fox'},\r\n  ];\r\n  constructor( private formBuilder: FormBuilder) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.newJobForm = this.formBuilder.group({\r\n      role : new FormControl('', [Validators.required])\r\n    });\r\n    \r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvdXNlci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\nexport class UserComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}